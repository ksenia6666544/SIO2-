LAMMPS (22 Jul 2025)
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread.
  using 1 OpenMP thread(s) per MPI task
Loaded 1 plugins from C:\Users\Home\AppData\Local\LAMMPS 64-bit 22Jul2025 with GUI\plugins
# Compute elastic constant tensor for a crystal
#
# Written by Aidan Thompson (Sandia, athomps@sandia.gov)
#
#  This script uses the following three include files.
#
#   init.mod      (must be modified for different crystal structures)
# 	       	  Define units, deformation parameters and initial
#		  configuration of the atoms and simulation cell.
#
#
#   potential.mod    (must be modified for different pair styles)
# 		     Define pair style and other attributes
#		     not stored in restart file
#
#
#   displace.mod    (displace.mod should not need to be modified)
# 		    Perform positive and negative box displacements
# 		    in direction ${dir} and size ${up}.
# 		    It uses the resultant changes
#		    in stress to compute one
# 		    row of the elastic stiffness tensor
#
#		    Inputs variables:
#		    	   dir = the Voigt deformation component
#		    		    (1,2,3,4,5,6)
#		    Global constants:
#       	    	   up = the deformation magnitude (strain units)
#       		   cfac = conversion from LAMMPS pressure units to
#               	   output units for elastic constants
#
#
#  To run this on a different system, it should only be necessary to
#  modify the files init.mod and potential.mod. In order to calculate
#  the elastic constants correctly, care must be taken to specify
#  the correct units in init.mod (units, cfac and cunits). It is also
#  important to verify that the minimization of energy w.r.t atom
#  positions in the deformed cell is fully converged.
#  One indication of this is that the elastic constants are insensitive
#  to the choice of the variable ${up} in init.mod. Another is to check
#  the final max and two-norm forces reported in the log file. If you know
#  that minimization is not required, you can set maxiter = 0.0 in
#  init.mod.
#

include init.mod
# NOTE: This script can be modified for different atomic structures,
# units, etc. See in.elastic for more info.
#

# Define the finite deformation size. Try several values of this
# variable to verify that results do not depend on it.
variable up equal 1.0e-6

# Define the amount of random jiggle for atoms
# This prevents atoms from staying on saddle points
variable atomjiggle equal 1.0e-5

# Uncomment one of these blocks, depending on what units
# you are using in LAMMPS and for output

# metal units, elastic constants in eV/A^3
#units		metal
#variable cfac equal 6.2414e-7
#variable cunits string eV/A^3

# metal units, elastic constants in GPa
#units		metal
#variable cfac equal 1.0e-4
#variable cunits string GPa

# real units, elastic constants in GPa
units		real
variable cfac equal 1.01325e-4
variable cunits string GPa

# Define minimization parameters
variable etol equal 0.0
variable ftol equal 1.0e-10
variable maxiter equal 100
variable maxeval equal 1000
variable dmax equal 1.0e-2

boundary p p p
atom_style charge

variable a equal 4.91
variable c equal 5.43
variable a1 equal 0.5*${a}
variable a1 equal 0.5*4.91
variable a2 equal sqrt(3.0)/2.0*${a}
variable a2 equal sqrt(3.0)/2.0*4.91
variable a3 equal ${c}
variable a3 equal 5.43

# Создание примитивной ячейки кварца
lattice custom 1.0     a1    ${a1} -${a2} 0         a2    ${a1} ${a2}  0         a3    0     0      ${c}      basis 0.531 0      0.333     basis 0     0.531  0.666     basis 0.469 0.469  0         basis 0.269 0.413  0.785     basis 0.587 0.856  0.115     basis 0.144 0.731  0.445     basis 0.413 0.269  0.225     basis 0.856 0.587  0.875     basis 0.731 0.144  0.545
lattice custom 1.0     a1    2.455 -${a2} 0         a2    ${a1} ${a2}  0         a3    0     0      ${c}      basis 0.531 0      0.333     basis 0     0.531  0.666     basis 0.469 0.469  0         basis 0.269 0.413  0.785     basis 0.587 0.856  0.115     basis 0.144 0.731  0.445     basis 0.413 0.269  0.225     basis 0.856 0.587  0.875     basis 0.731 0.144  0.545
lattice custom 1.0     a1    2.455 -4.25218473258159 0         a2    ${a1} ${a2}  0         a3    0     0      ${c}      basis 0.531 0      0.333     basis 0     0.531  0.666     basis 0.469 0.469  0         basis 0.269 0.413  0.785     basis 0.587 0.856  0.115     basis 0.144 0.731  0.445     basis 0.413 0.269  0.225     basis 0.856 0.587  0.875     basis 0.731 0.144  0.545
lattice custom 1.0     a1    2.455 -4.25218473258159 0         a2    2.455 ${a2}  0         a3    0     0      ${c}      basis 0.531 0      0.333     basis 0     0.531  0.666     basis 0.469 0.469  0         basis 0.269 0.413  0.785     basis 0.587 0.856  0.115     basis 0.144 0.731  0.445     basis 0.413 0.269  0.225     basis 0.856 0.587  0.875     basis 0.731 0.144  0.545
lattice custom 1.0     a1    2.455 -4.25218473258159 0         a2    2.455 4.25218473258159  0         a3    0     0      ${c}      basis 0.531 0      0.333     basis 0     0.531  0.666     basis 0.469 0.469  0         basis 0.269 0.413  0.785     basis 0.587 0.856  0.115     basis 0.144 0.731  0.445     basis 0.413 0.269  0.225     basis 0.856 0.587  0.875     basis 0.731 0.144  0.545
lattice custom 1.0     a1    2.455 -4.25218473258159 0         a2    2.455 4.25218473258159  0         a3    0     0      5.43      basis 0.531 0      0.333     basis 0     0.531  0.666     basis 0.469 0.469  0         basis 0.269 0.413  0.785     basis 0.587 0.856  0.115     basis 0.144 0.731  0.445     basis 0.413 0.269  0.225     basis 0.856 0.587  0.875     basis 0.731 0.144  0.545
Lattice spacing in x,y,z = 4.91 8.5043695 5.43

region		box prism 0 2.0 0 3.0 0 4.0 0.0 0.0 0.0
create_box	2 box
Created triclinic box = (0 0 0) to (9.82 25.513108 21.72) with tilt (0 0 0)
  1 by 1 by 1 MPI processor grid
create_atoms 1 box basis 1 1 basis 2 1 basis 3 1     basis 4 2 basis 5 2 basis 6 2 basis 7 2 basis 8 2 basis 9 2
Created 432 atoms
  using lattice units in triclinic box = (0 0 0) to (9.82 25.513108 21.72) with tilt (0 0 0)
  create_atoms CPU = 0.000 seconds

# Массы атомов
mass 1 28.0855  # Кремний
mass 2 15.999   # Кислород
include potential.mod
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

# Заряды для потенциала Jakse из таблицы I
set type 1 charge 2.4   # Кремний
Setting atom values ...
  144 settings made for charge
set type 2 charge -1.2 # Кислород
Setting atom values ...
  288 settings made for charge

pair_style born/coul/long 10.0
pair_coeff 1 1 0.0276344 0.0460 1.4408 580.030 0.0     # Si-Si из таблицы III
pair_coeff 1 2 0.16120   0.1560 2.5419 1066.0667 0.0   # Si-O из таблицы III
pair_coeff 2 2 0.276344  0.2630 3.6430 1959.372 0.0    # O-O из таблицы III


#kspace_style pppm 1.0e-4

# Setup neighbor style
neighbor 1.0 nsq
neigh_modify once no every 1 delay 0 check yes

# Setup minimization style
min_style	     cg
min_modify	     dmax ${dmax} line quadratic
min_modify	     dmax 0.01 line quadratic

# Setup output
thermo		1
thermo_style custom step temp pe press pxx pyy pzz pxy pxz pyz lx ly lz vol
thermo_modify norm no

# Compute initial state
fix 3 all box/relax  aniso 0.0
minimize ${etol} ${ftol} ${maxiter} ${maxeval}
minimize 0 ${ftol} ${maxiter} ${maxeval}
minimize 0 1e-10 ${maxiter} ${maxeval}
minimize 0 1e-10 100 ${maxeval}
minimize 0 1e-10 100 1000
ERROR: Pair style requires a KSpace style (src/KSPACE/pair_born_coul_long.cpp:378)
Last input line: minimize ${etol} ${ftol} ${maxiter} ${maxeval}
